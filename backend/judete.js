export const JUDET_CSV_CODES = {
  Alba: "AB",
  Argeș: "AG",
  Arad: "AR",
  Bacău: "BC",
  Bihor: "BH",
  "Bistrița-Năsăud": "BN",
  Brăila: "BR",
  Brașov: "BV",
  Botoșani: "BT",
  Buzău: "BZ",
  Cluj: "CJ",
  Călărași: "CL",
  "Caraș-Severin": "CS",
  Constanța: "CT",
  Covasna: "CV",
  Dâmbovița: "DB",
  Dolj: "DJ",
  Gorj: "GJ",
  Galați: "GL",
  Giurgiu: "GR",
  Hunedoara: "HD",
  Harghita: "HR",
  Ialomița: "IL",
  Iași: "IS",
  Mehedinți: "MH",
  Maramureș: "MM",
  Mureș: "MS",
  Neamț: "NT",
  Olt: "OT",
  Prahova: "PH",
  Sibiu: "SB",
  Sălaj: "SJ",
  "Satu Mare": "SM",
  Suceava: "SV",
  Tulcea: "TL",
  Timiș: "TM",
  Teleorman: "TR",
  Vâlcea: "VL",
  Vrancea: "VN",
  Vaslui: "VS",
  Ilfov: "IF",
  București: "B",
};

export const JUDETE = [
  "ALBA",
  "ARGEȘ",
  "ARAD",
  "BACĂU",
  "BIHOR",
  "BISTRIȚA-NĂSĂUD",
  "BRĂILA",
  "BRAȘOV",
  "BOTOȘANI",
  "BUZĂU",
  "CLUJ",
  "CĂLĂRAȘI",
  "CARAȘ-SEVERIN",
  "CONSTANȚA",
  "COVASNA",
  "DÂMBOVIȚA",
  "DOLJ",
  "GORJ",
  "GALAȚI",
  "GIURGIU",
  "HUNEDOARA",
  "HARGHITA",
  "IALOMIȚA",
  "IAȘI",
  "MEHEDINȚI",
  "MARAMUREȘ",
  "MUREȘ",
  "NEAMȚ",
  "OLT",
  "PRAHOVA",
  "SIBIU",
  "SĂLAJ",
  "SATU MARE",
  "SUCEAVA",
  "TULCEA",
  "TIMIȘ",
  "TELEORMAN",
  "VÂLCEA",
  "VRANCEA",
  "VASLUI",
  "ILFOV",
  "BUCUREȘTI",
];

export const JUDETE_CODURI = [
  "AB",
  "AG",
  "AR",
  "BC",
  "BH",
  "BN",
  "BR",
  "BV",
  "BT",
  "BZ",
  "CJ",
  "CL",
  "CS",
  "CT",
  "CV",
  "DB",
  "DJ",
  "GJ",
  "GL",
  "GR",
  "HD",
  "HR",
  "IL",
  "IS",
  "MH",
  "MM",
  "MS",
  "NT",
  "OT",
  "PH",
  "SB",
  "SJ",
  "SM",
  "SV",
  "TL",
  "TM",
  "TR",
  "VL",
  "VN",
  "VS",
  "IF",
  "B",
];

export const JUDET_BAC_FILES = Object.fromEntries(
  Object.entries(JUDET_CSV_CODES).map(([nume, cod]) => [
    cod,
    nume
      .replace(/ș/g, "s")
      .replace(/Ș/g, "S")
      .replace(/ț/g, "t")
      .replace(/Ț/g, "T")
      .replace(/ă/g, "a")
      .replace(/Ă/g, "A")
      .replace(/â/g, "a")
      .replace(/Â/g, "A")
      .replace(/î/g, "i")
      .replace(/Î/g, "I"),
  ])
);
